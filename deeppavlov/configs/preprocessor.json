      {
        "info": "0. Initialize tokenizer/detokenizer, and tokenize input & history",
        "id": "(de)tokenizer",
        "class_name": "stream_spacy_tokenizer",
        "lowercase": false,
        "alphas_only": false
      },
      {
        "info": "1. Initializer named entity recognizer, find entities in input",
        "id": "ner",
        "config_path": "{CONFIGS_PATH}/ner/ner_rus_lower_vpc_with_context.json"
      },
      {
        "class_name": "ner_with_context",
        "ner_model": "#ner",
        "tokenizer": "#(de)tokenizer",
        "context_delimeter": ".",
        "in": ["utterances_batch", "history_batch"],
        "out": ["utterance_toks", "utterance_tags"]
      },
      {
        "info": "2. Detect if user introduced himself",
        "class_name": "myself_detector",
        "person_tag": "PER",
        "state_slot": "user_name",
        "in": ["utterance_toks", "utterance_tags", "states_batch"],
        "out": ["states_batch"]
      },
